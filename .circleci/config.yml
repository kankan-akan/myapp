# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Orbs are reusable packages of CircleCI configuration that you may share across projects, enabling you to create encapsulated, parameterized commands, jobs, and executors that can be used across multiple projects.
# See: https://circleci.com/docs/2.0/orb-intro/
orbs:
  ruby: circleci/ruby@1.4.0
  node: circleci/node@5.0.2

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  test:
    working_directory: ~/myapp

    docker:
      - image: cimg/ruby:3.0.3
        environment:
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
          DB_USERNAME: 'root'
          DB_PASSWORD: 'rootpassword'
      - image: cimg/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: 'rootpassword'
          MYSQL_DATABASE: myapp_test
          MYSQL_ALLOW_EMPTY_PASSWORD: yes

    executor: ruby/default

    steps:
      - checkout

      - run:
          name: bundle install
          command: bundle config set --local path 'vendor/bundle'

      - run:
          name: Wait for DB
          command: dockerize -wait tcp://127.0.0.1:3306 -timeout 120s

      # Database setup
      # - run:
      #     name: rails db:migrate
      #     command: bundle exec rails db:migrate
      - run:
          name: Database setup
          command: bundle exec rails db:schema:load --trace
      - run:
          name: Rspec
          command: bundle exec rspec

      # collect reports
      - store_test_results:
          path: /tmp/test-results
      - store_artifacts:
          path: /tmp/test-results
          destination: test-results

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  version: 2.1
  workflow:
    jobs:
      - test